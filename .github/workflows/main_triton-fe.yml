# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - Triton-FE

on:
  push:
    branches:
      - main
  workflow_dispatch:

# Environment variables available to all jobs and steps in this workflow
env:
  AZURE_WEBAPP_NAME: 'Triton-FE'
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  NODE_VERSION: '22.x'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Required for actions/checkout

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm' # Enable npm caching automatically
          cache-dependency-path: '**/package-lock.json'

      - name: Cache build outputs
        uses: actions/cache@v4
        with:
          path: |
            dist
            .vite
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('src/**/*', 'public/**/*', 'index.html', 'vite.config.*') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}-
            ${{ runner.os }}-build-

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Run tests
        run: npm run test --if-present

      # Only include necessary files for deployment (exclude node_modules, source files, etc.)
      - name: Prepare deployment package
        run: |
          mkdir deployment-package
          cp -r dist/* deployment-package/ 2>/dev/null || cp -r build/* deployment-package/ 2>/dev/null || echo "No dist or build folder found"
          cp package.json deployment-package/
          cp package-lock.json deployment-package/
          # Copy any other necessary files (server.js, etc.)
          [ -f server.js ] && cp server.js deployment-package/ || echo "No server.js found"
          [ -f vercel.json ] && cp vercel.json deployment-package/ || echo "No vercel.json found"

      - name: Create deployment artifact
        run: |
          cd deployment-package
          zip -r ../release.zip . -x "*.git*" "node_modules/*" "src/*" "*.md"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip
          retention-days: 1 # Reduce storage usage

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # Required for requesting the JWT
      contents: read # Required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_342D948E1B9F4F649BFAF65335B9F8F6 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_6E6C98CA3E72424D9E3D170E967BB67D }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_3C50D9DC2D2249FBA4AA8410621AE3A7 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: 'Production'
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          