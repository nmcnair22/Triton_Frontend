# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - Triton-FE

on:
  push:
    branches:
      - main
  workflow_dispatch:

# Environment variables available to all jobs and steps in this workflow
env:
  AZURE_WEBAPP_NAME: 'Triton-FE'
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  NODE_VERSION: '22.x'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Required for actions/checkout

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm' # Enable npm caching automatically
          cache-dependency-path: '**/package-lock.json'

      # REMOVED BUILD CACHE - This was causing stale builds
      # Always build fresh to ensure consistency

      - name: Install dependencies
        run: npm ci

      - name: Clean build directories
        run: |
          rm -rf dist/
          rm -rf .vite/
          rm -rf node_modules/.vite/

      - name: Build application
        env:
          VITE_API_BASE_URL: ${{ vars.VITE_API_BASE_URL || secrets.VITE_API_BASE_URL }}
        run: |
          # Force clean build
          npm run build
          # Verify build output
          echo "Build complete. Checking output..."
          ls -la dist/
          ls -la dist/assets/ | head -10

      - name: Run tests
        run: npm run test --if-present

      # Deploy the ENTIRE application, not just dist folder
      - name: Prepare deployment package
        run: |
          echo "Creating deployment package..."
          mkdir deployment-package
          
          # Copy built files
          cp -r dist deployment-package/
          
          # Copy all necessary config and source files
          cp package.json deployment-package/
          cp package-lock.json deployment-package/
          cp server.js deployment-package/
          cp vite.config.mjs deployment-package/
          
          # Copy source files (needed for Azure to run properly)
          cp -r src deployment-package/
          cp -r public deployment-package/ 2>/dev/null || echo "No public folder"
          cp index.html deployment-package/ 2>/dev/null || echo "No index.html in root"
          
          # Copy any other config files
          [ -f .env.production ] && cp .env.production deployment-package/ || echo "No .env.production found"
          [ -f tsconfig.json ] && cp tsconfig.json deployment-package/ || echo "No tsconfig.json found"
          [ -f postcss.config.js ] && cp postcss.config.js deployment-package/ || echo "No postcss.config.js found"
          [ -f tailwind.config.js ] && cp tailwind.config.js deployment-package/ || echo "No tailwind.config.js found"
          
          # List what we're deploying
          echo "Deployment package contents:"
          ls -la deployment-package/

      - name: Create deployment artifact
        run: |
          cd deployment-package
          zip -r ../release.zip . -x "*.git*" "node_modules/*" "*.md" ".vscode/*" ".github/*"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip
          retention-days: 1 # Reduce storage usage

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # Required for requesting the JWT
      contents: read # Required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: |
          unzip release.zip
          echo "Deployment contents:"
          ls -la

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_342D948E1B9F4F649BFAF65335B9F8F6 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_6E6C98CA3E72424D9E3D170E967BB67D }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_3C50D9DC2D2249FBA4AA8410621AE3A7 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: Triton-FE
          slot-name: 'Production'
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          
      # Add post-deployment verification
      - name: Verify deployment
        run: |
          echo "Deployment complete. Waiting 30 seconds for app to restart..."
          sleep 30